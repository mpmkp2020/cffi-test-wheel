env:
    global:
        - REPO_DIR=cffi
        - PLAT=x86_64
        - MANYLINUX_URL="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        - WHEELHOUSE_UPLOADER_USERNAME=travis-worker

language: python
services: docker
os: linux

jobs:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
      - stage: build wheel
        env:
          - MB_PYTHON_VERSION=3.7
          - PLAT=amd64

      - arch: arm64
        env:
          - MB_PYTHON_VERSION=3.7
          - PLAT=aarch64
          - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
          - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}

before_install:
    - yum install mercurial
    - hg clone https://foss.heptapod.net/pypy/cffi
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
          CONTAINER="pre-release";
          BUILD_COMMIT=${DAILY_COMMIT:-$BUILD_COMMIT};
      else
          CONTAINER=wheels;
          UPLOAD_ARGS="--no-update-index";
      fi
    #- BUILD_DEPENDS="$NP_BUILD_DEP $CYTHON_BUILD_DEP $PYBIND11_BUILD_DEP"
    - TEST_DEPENDS="pytest pycparser"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - build_wheel $REPO_DIR $PLAT
    - ls ${TRAVIS_BUILD_DIR}/wheelhouse || true
    - ls wheelhouse || true

script:
    #- install_run $PLAT
    - echo "Skipping this"
#after_success:
#    # trigger an upload to the shared ecosystem
#    # infrastructure at: https://anaconda.org/scipy-wheels-nightly
#    # for cron jobs only (restricted to master branch once
#    # per week)
#    # SCIPY_WHEELS_NIGHTLY is a secret token
#    # used in Travis CI config, originally
#    # generated at anaconda.org for scipy-wheels-nightly
#    - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
#          ANACONDA_ORG="scipy-wheels-nightly";
#          pip install git+https://github.com/Anaconda-Server/anaconda-client;
#          anaconda -t ${SCIPY_WHEELS_NIGHTLY} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
#      fi
#    # for merges (push events) we use the staging area instead;
#    # SCIPY_STAGING_UPLOAD_TOKEN is a secret token used in Travis
#    # CI config, originally generated at anaconda.org for
#    # multibuild-wheels-staging
#    - if [ "$TRAVIS_EVENT_TYPE" == "push" ]; then
#          ANACONDA_ORG="multibuild-wheels-staging";
#          pip install git+https://github.com/Anaconda-Server/anaconda-client;
#          anaconda -t ${SCIPY_STAGING_UPLOAD_TOKEN} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
#      fi
#      
#
